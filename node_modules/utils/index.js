if (typeof define !== 'function') {
    var define = require('amdefine')(module);
}


define(['fs'], function(fs) {

    /**
     * Parse all plugins into an array
     * 
     * @method getPluginList
     * @param {Function} callback The callback method to execute after parsing
     * @param {String} callback.err null if no error occured, otherwise the error
     * @param {Object} callback.result An array containing the plugins
     */
    function getPluginList(callback) {
        var pluginList = [];
        var that = this;
        var files = fs.readdirSync(that.pluginFolder);
        var requirejs = require('requirejs');

        function requireRecursive(files) {
            var file = files.shift(); // results in alphabetical order
            requirejs([that.pluginFolder + '/' + file + '/index.js'], function(Plugin) {
                pluginList.push(new Plugin(that.app));
                if (files.length > 0) {
                    requireRecursive(files);
                } else {
                    return callback(null, pluginList);
                }
            });
        }

        requireRecursive(files);
    };

});
